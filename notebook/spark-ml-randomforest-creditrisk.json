{"paragraphs":[{"text":"import org.apache.spark._\r\nimport org.apache.spark.rdd.RDD\r\n\r\nimport org.apache.spark.sql.SQLContext\r\n\r\nimport org.apache.spark.sql._\r\nimport org.apache.spark.sql.functions._\r\nimport org.apache.spark.sql.types._","dateUpdated":"2017-01-25T23:07:06-0800","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485323245223_1845918018","id":"20170124-214725_1932388311","dateCreated":"2017-01-24T09:47:25-0800","dateStarted":"2017-01-25T23:07:06-0800","dateFinished":"2017-01-25T23:07:07-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:161","focus":true},{"text":"case class Credit(\r\n    creditability: Double,\r\n    balance: Double, duration: Double, history: Double, purpose: Double, amount: Double,\r\n    savings: Double, employment: Double, instPercent: Double, sexMarried: Double, guarantors: Double,\r\n    residenceDuration: Double, assets: Double, age: Double, concCredit: Double, apartment: Double,\r\n    credits: Double, occupation: Double, dependents: Double, hasPhone: Double, foreign: Double\r\n  )","dateUpdated":"2017-01-25T23:07:06-0800","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485323286177_-1027725545","id":"20170124-214806_1154404415","dateCreated":"2017-01-24T09:48:06-0800","dateStarted":"2017-01-25T23:07:06-0800","dateFinished":"2017-01-25T23:07:08-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:162","result":{"code":"SUCCESS","type":"TEXT","msg":"\ndefined class Credit\n"},"focus":true},{"text":"def parseCredit(str: String): Credit = {\r\n    val fields: Array[Double] = str.split(\",\").map(s => s.toDouble)\r\n    Credit(\r\n      fields(0),\r\n      fields(1) - 1, fields(2), fields(3), fields(4), fields(5),\r\n      fields(6) - 1, fields(7) - 1, fields(8), fields(9) - 1, fields(10) - 1,\r\n      fields(11) - 1, fields(12) - 1, fields(13), fields(14) - 1, fields(15) - 1,\r\n      fields(16) - 1, fields(17) - 1, fields(18) - 1, fields(19) - 1, fields(20) - 1\r\n    )\r\n  }","dateUpdated":"2017-01-25T23:07:06-0800","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485323321710_-1680767022","id":"20170124-214841_983495135","dateCreated":"2017-01-24T09:48:41-0800","dateStarted":"2017-01-25T23:07:07-0800","dateFinished":"2017-01-25T23:07:08-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:163","focus":true},{"text":"val creditText: RDD[String] = sc.textFile(\"/home/anindya/zeppelin-spark-projects/spark-ml-randomforest-creditrisk/data/germancredit.csv\")\nval creditDF: DataFrame = creditText.map(parseCredit).toDF().cache()\ncreditDF.registerTempTable(\"credit\")","dateUpdated":"2017-01-25T23:07:06-0800","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485324550896_-1717175316","id":"20170124-220910_312903650","dateCreated":"2017-01-24T10:09:10-0800","dateStarted":"2017-01-25T23:07:08-0800","dateFinished":"2017-01-25T23:07:10-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:164","focus":true},{"text":"creditDF.show(10)","dateUpdated":"2017-01-25T23:07:06-0800","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485324547148_-419248710","id":"20170124-220907_713563244","result":{"code":"SUCCESS","type":"TEXT","msg":"+-------------+-------+--------+-------+-------+------+-------+----------+-----------+----------+----------+-----------------+------+----+----------+---------+-------+----------+----------+--------+-------+\n|creditability|balance|duration|history|purpose|amount|savings|employment|instPercent|sexMarried|guarantors|residenceDuration|assets| age|concCredit|apartment|credits|occupation|dependents|hasPhone|foreign|\n+-------------+-------+--------+-------+-------+------+-------+----------+-----------+----------+----------+-----------------+------+----+----------+---------+-------+----------+----------+--------+-------+\n|          1.0|    0.0|    18.0|    4.0|    2.0|1049.0|    0.0|       1.0|        4.0|       1.0|       0.0|              3.0|   1.0|21.0|       2.0|      0.0|    0.0|       2.0|       0.0|     0.0|    0.0|\n|          1.0|    0.0|     9.0|    4.0|    0.0|2799.0|    0.0|       2.0|        2.0|       2.0|       0.0|              1.0|   0.0|36.0|       2.0|      0.0|    1.0|       2.0|       1.0|     0.0|    0.0|\n|          1.0|    1.0|    12.0|    2.0|    9.0| 841.0|    1.0|       3.0|        2.0|       1.0|       0.0|              3.0|   0.0|23.0|       2.0|      0.0|    0.0|       1.0|       0.0|     0.0|    0.0|\n|          1.0|    0.0|    12.0|    4.0|    0.0|2122.0|    0.0|       2.0|        3.0|       2.0|       0.0|              1.0|   0.0|39.0|       2.0|      0.0|    1.0|       1.0|       1.0|     0.0|    1.0|\n|          1.0|    0.0|    12.0|    4.0|    0.0|2171.0|    0.0|       2.0|        4.0|       2.0|       0.0|              3.0|   1.0|38.0|       0.0|      1.0|    1.0|       1.0|       0.0|     0.0|    1.0|\n|          1.0|    0.0|    10.0|    4.0|    0.0|2241.0|    0.0|       1.0|        1.0|       2.0|       0.0|              2.0|   0.0|48.0|       2.0|      0.0|    1.0|       1.0|       1.0|     0.0|    1.0|\n|          1.0|    0.0|     8.0|    4.0|    0.0|3398.0|    0.0|       3.0|        1.0|       2.0|       0.0|              3.0|   0.0|39.0|       2.0|      1.0|    1.0|       1.0|       0.0|     0.0|    1.0|\n|          1.0|    0.0|     6.0|    4.0|    0.0|1361.0|    0.0|       1.0|        2.0|       2.0|       0.0|              3.0|   0.0|40.0|       2.0|      1.0|    0.0|       1.0|       1.0|     0.0|    1.0|\n|          1.0|    3.0|    18.0|    4.0|    3.0|1098.0|    0.0|       0.0|        4.0|       1.0|       0.0|              3.0|   2.0|65.0|       2.0|      1.0|    1.0|       0.0|       0.0|     0.0|    0.0|\n|          1.0|    1.0|    24.0|    2.0|    3.0|3758.0|    2.0|       0.0|        1.0|       1.0|       0.0|              3.0|   3.0|23.0|       2.0|      0.0|    0.0|       0.0|       0.0|     0.0|    0.0|\n+-------------+-------+--------+-------+-------+------+-------+----------+-----------+----------+----------+-----------------+------+----+----------+---------+-------+----------+----------+--------+-------+\nonly showing top 10 rows\n\n"},"dateCreated":"2017-01-24T10:09:07-0800","dateStarted":"2017-01-25T23:07:09-0800","dateFinished":"2017-01-25T23:07:10-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:165","focus":true},{"text":"creditDF.printSchema","dateUpdated":"2017-01-25T23:07:06-0800","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485324739235_1619798391","id":"20170124-221219_1681790577","result":{"code":"SUCCESS","type":"TEXT","msg":"root\n |-- creditability: double (nullable = false)\n |-- balance: double (nullable = false)\n |-- duration: double (nullable = false)\n |-- history: double (nullable = false)\n |-- purpose: double (nullable = false)\n |-- amount: double (nullable = false)\n |-- savings: double (nullable = false)\n |-- employment: double (nullable = false)\n |-- instPercent: double (nullable = false)\n |-- sexMarried: double (nullable = false)\n |-- guarantors: double (nullable = false)\n |-- residenceDuration: double (nullable = false)\n |-- assets: double (nullable = false)\n |-- age: double (nullable = false)\n |-- concCredit: double (nullable = false)\n |-- apartment: double (nullable = false)\n |-- credits: double (nullable = false)\n |-- occupation: double (nullable = false)\n |-- dependents: double (nullable = false)\n |-- hasPhone: double (nullable = false)\n |-- foreign: double (nullable = false)\n\n"},"dateCreated":"2017-01-24T10:12:19-0800","dateStarted":"2017-01-25T23:07:10-0800","dateFinished":"2017-01-25T23:07:11-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:166","focus":true},{"text":"sqlContext.sql(\"SELECT creditability, AVG(balance) as avgbalance, AVG(amount) as avgamt, AVG(duration) as avgdur FROM credit GROUP BY creditability\").show","dateUpdated":"2017-01-25T23:07:06-0800","config":{"colWidth":12,"graph":{"mode":"multiBarChart","height":394.3999938964844,"optionOpen":false,"keys":[{"name":"creditability","index":0,"aggr":"sum"}],"values":[{"name":"avgbalance","index":1,"aggr":"sum"},{"name":"avgamt","index":2,"aggr":"sum"},{"name":"avgdur","index":3,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"creditability","index":0,"aggr":"sum"},"yAxis":{"name":"avgbalance","index":1,"aggr":"sum"}}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485324892485_-13043649","id":"20170124-221452_328072614","result":{"code":"SUCCESS","type":"TEXT","msg":"+-------------+------------------+------------------+------------------+\n|creditability|        avgbalance|            avgamt|            avgdur|\n+-------------+------------------+------------------+------------------+\n|          0.0|0.9033333333333333|3938.1266666666666|             24.86|\n|          1.0|1.8657142857142857| 2985.442857142857|19.207142857142856|\n+-------------+------------------+------------------+------------------+\n\n"},"dateCreated":"2017-01-24T10:14:52-0800","dateStarted":"2017-01-25T23:07:11-0800","dateFinished":"2017-01-25T23:07:11-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:167"},{"text":"z.show(creditDF.groupBy(\"creditability\").avg(\"balance\"))","dateUpdated":"2017-01-25T23:07:06-0800","config":{"colWidth":4,"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"keys":[{"name":"creditability","index":0,"aggr":"sum"}],"values":[{"name":"avg(balance)","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"creditability","index":0,"aggr":"sum"},"yAxis":{"name":"avg(balance)","index":1,"aggr":"sum"}}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485325501898_440815558","id":"20170124-222501_648587024","result":{"code":"SUCCESS","type":"TABLE","msg":"creditability\tavg(balance)\n0.0\t0.9033333333333333\n1.0\t1.8657142857142857\n","comment":"","msgTable":[[{"key":"avg(balance)","value":"0.0"},{"key":"avg(balance)","value":"0.9033333333333333"}],[{"value":"1.0"},{"value":"1.8657142857142857"}]],"columnNames":[{"name":"creditability","index":0,"aggr":"sum"},{"name":"avg(balance)","index":1,"aggr":"sum"}],"rows":[["0.0","0.9033333333333333"],["1.0","1.8657142857142857"]]},"dateCreated":"2017-01-24T10:25:01-0800","dateStarted":"2017-01-25T23:07:11-0800","dateFinished":"2017-01-25T23:07:12-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:168"},{"text":"z.show(creditDF.groupBy(\"creditability\").avg(\"amount\"))","dateUpdated":"2017-01-25T23:07:06-0800","config":{"colWidth":4,"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"keys":[{"name":"creditability","index":0,"aggr":"sum"}],"values":[{"name":"avg(amount)","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"creditability","index":0,"aggr":"sum"},"yAxis":{"name":"avg(amount)","index":1,"aggr":"sum"}}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485325539450_-2082520971","id":"20170124-222539_1370342814","result":{"code":"SUCCESS","type":"TABLE","msg":"creditability\tavg(amount)\n0.0\t3938.1266666666666\n1.0\t2985.442857142857\n","comment":"","msgTable":[[{"key":"avg(amount)","value":"0.0"},{"key":"avg(amount)","value":"3938.1266666666666"}],[{"value":"1.0"},{"value":"2985.442857142857"}]],"columnNames":[{"name":"creditability","index":0,"aggr":"sum"},{"name":"avg(amount)","index":1,"aggr":"sum"}],"rows":[["0.0","3938.1266666666666"],["1.0","2985.442857142857"]]},"dateCreated":"2017-01-24T10:25:39-0800","dateStarted":"2017-01-25T23:07:12-0800","dateFinished":"2017-01-25T23:07:13-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:169"},{"text":"z.show(creditDF.groupBy(\"creditability\").avg(\"duration\"))","dateUpdated":"2017-01-25T23:07:06-0800","config":{"colWidth":4,"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"keys":[{"name":"creditability","index":0,"aggr":"sum"}],"values":[{"name":"avg(duration)","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"creditability","index":0,"aggr":"sum"},"yAxis":{"name":"avg(duration)","index":1,"aggr":"sum"}}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485325650936_-1699711139","id":"20170124-222730_145212977","result":{"code":"SUCCESS","type":"TABLE","msg":"creditability\tavg(duration)\n0.0\t24.86\n1.0\t19.207142857142856\n","comment":"","msgTable":[[{"key":"avg(duration)","value":"0.0"},{"key":"avg(duration)","value":"24.86"}],[{"value":"1.0"},{"value":"19.207142857142856"}]],"columnNames":[{"name":"creditability","index":0,"aggr":"sum"},{"name":"avg(duration)","index":1,"aggr":"sum"}],"rows":[["0.0","24.86"],["1.0","19.207142857142856"]]},"dateCreated":"2017-01-24T10:27:30-0800","dateStarted":"2017-01-25T23:07:12-0800","dateFinished":"2017-01-25T23:07:14-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:170"},{"text":"creditDF.describe(\"balance\").show","dateUpdated":"2017-01-25T23:07:06-0800","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485325237329_-697654793","id":"20170124-222037_755401582","result":{"code":"SUCCESS","type":"TEXT","msg":"+-------+-----------------+\n|summary|          balance|\n+-------+-----------------+\n|  count|             1000|\n|   mean|            1.577|\n| stddev|1.257637727110893|\n|    min|              0.0|\n|    max|              3.0|\n+-------+-----------------+\n\n"},"dateCreated":"2017-01-24T10:20:37-0800","dateStarted":"2017-01-25T23:07:13-0800","dateFinished":"2017-01-25T23:07:14-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:171"},{"text":"val featureCols: Array[String] = Array(\"balance\", \"duration\", \"history\", \"purpose\", \"amount\",\r\n                                    \"savings\", \"employment\", \"instPercent\", \"sexMarried\", \"guarantors\",\r\n                                    \"residenceDuration\", \"assets\", \"age\", \"concCredit\", \"apartment\",\r\n                                    \"credits\", \"occupation\", \"dependents\", \"hasPhone\", \"foreign\")                                    \r\nval assembler: VectorAssembler = new VectorAssembler().setInputCols(featureCols).setOutputCol(\"features\")\r\nval assembledDF: DataFrame = assembler.transform(creditDF)","dateUpdated":"2017-01-25T23:07:06-0800","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[{"name":"creditability","index":0,"aggr":"sum"}],"values":[{"name":"balance","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"creditability","index":0,"aggr":"sum"},"yAxis":{"name":"balance","index":1,"aggr":"sum"}}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485325668265_-899201920","id":"20170124-222748_1296487526","dateCreated":"2017-01-24T10:27:48-0800","dateStarted":"2017-01-25T23:07:14-0800","dateFinished":"2017-01-25T23:07:15-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:172","errorMessage":"","focus":true},{"text":"import org.apache.spark.ml.feature.StringIndexer\nval labelIndexer: StringIndexer = new StringIndexer().setInputCol(\"creditability\").setOutputCol(\"label\")\nval labelIndexedDF: DataFrame = labelIndexer.fit(assembledDF).transform(assembledDF)","dateUpdated":"2017-01-25T23:07:06-0800","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485325877242_-294874124","id":"20170124-223117_779184057","result":{"code":"SUCCESS","type":"TEXT","msg":"\nimport org.apache.spark.ml.feature.StringIndexer\n\nlabelIndexer: org.apache.spark.ml.feature.StringIndexer = strIdx_1156faa5539e\n\nlabelIndexedDF: org.apache.spark.sql.DataFrame = [creditability: double, balance: double ... 21 more fields]\n"},"dateCreated":"2017-01-24T10:31:17-0800","dateStarted":"2017-01-25T23:07:15-0800","dateFinished":"2017-01-25T23:07:16-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:173","focus":true},{"text":"val splitSeed: Int = 5043\nval Array(trainingData, testData) = labelIndexedDF.randomSplit(Array(0.7, 0.3), seed=splitSeed)","dateUpdated":"2017-01-25T23:07:06-0800","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485326518724_1057620595","id":"20170124-224158_1795793300","dateCreated":"2017-01-24T10:41:58-0800","dateStarted":"2017-01-25T23:07:15-0800","dateFinished":"2017-01-25T23:07:17-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:174","focus":true},{"text":"import org.apache.spark.ml.classification.{RandomForestClassificationModel, RandomForestClassifier}\nval classifier: RandomForestClassifier = new RandomForestClassifier()\n                                                .setImpurity(\"gini\")\n                                                .setMaxDepth(3)\n                                                .setNumTrees(20)\n                                                .setFeatureSubsetStrategy(\"auto\")\n                                                .setSeed(splitSeed)","dateUpdated":"2017-01-25T23:07:06-0800","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485326793248_1947330786","id":"20170124-224633_2126740821","dateCreated":"2017-01-24T10:46:33-0800","dateStarted":"2017-01-25T23:07:16-0800","dateFinished":"2017-01-25T23:07:17-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:175","errorMessage":"","focus":true},{"text":"import org.apache.spark.ml.classification.RandomForestClassificationModel\nval model: RandomForestClassificationModel = classifier.fit(trainingData)\nmodel.toDebugString","dateUpdated":"2017-01-25T23:07:06-0800","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485326826923_-2122127682","id":"20170124-224706_648464650","result":{"code":"SUCCESS","type":"TEXT","msg":"\nimport org.apache.spark.ml.classification.RandomForestClassificationModel\n\nmodel: org.apache.spark.ml.classification.RandomForestClassificationModel = RandomForestClassificationModel (uid=rfc_22762cdbdd1b) with 20 trees\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nres225: String =\n\"RandomForestClassificationModel (uid=rfc_22762cdbdd1b) with 20 trees\n  Tree 0 (weight 1.0):\n    If (feature 0 <= 1.0)\n     If (feature 10 <= 0.0)\n      If (feature 3 <= 6.0)\n       Predict: 0.0\n      Else (feature 3 > 6.0)\n       Predict: 0.0\n     Else (feature 10 > 0.0)\n      If (feature 12 <= 63.0)\n       Predict: 0.0\n      Else (feature 12 > 63.0)\n       Predict: 0.0\n    Else (feature 0 > 1.0)\n     If (feature 13 <= 1.0)\n      If (feature 3 <= 3.0)\n       Predict: 0.0\n      Else (feature 3 > 3.0)\n       Predict: 1.0\n     Else (feature 13 > 1.0)\n      If (feature 7 <= 1.0)\n       Predict: 0.0\n      Else (feature 7 > 1.0)\n       Predict: 0.0\n  Tree 1 (weight 1.0):\n    If (feature 2 <= 1.0)\n     If (feature 15 <= 0.0)\n      If (feature 11 <= 0.0)\n       Predict: 0.0\n  ..."},"dateCreated":"2017-01-24T10:47:06-0800","dateStarted":"2017-01-25T23:07:17-0800","dateFinished":"2017-01-25T23:07:18-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:176"},{"text":"val evaluator: BinaryClassificationEvaluator = new BinaryClassificationEvaluator().setMetricName(\"areaUnderROC\").setLabelCol(\"label\")\nval predictions: DataFrame = model.transform(testData)\nval accuracy: Double = evaluator.evaluate(predictions)\nprintln(\"Accuracy Before Pipeline Fitting: \" + accuracy)","dateUpdated":"2017-01-25T23:07:06-0800","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485326902224_1733779823","id":"20170124-224822_1934972774","result":{"code":"SUCCESS","type":"TEXT","msg":"\nevaluator: org.apache.spark.ml.evaluation.BinaryClassificationEvaluator = binEval_75ea7787fc9d\n\npredictions: org.apache.spark.sql.DataFrame = [creditability: double, balance: double ... 24 more fields]\n\naccuracy: Double = 0.7824906081835715\nAccuracy Before Pipeline Fitting: 0.7824906081835715\n"},"dateCreated":"2017-01-24T10:48:22-0800","dateStarted":"2017-01-25T23:07:18-0800","dateFinished":"2017-01-25T23:07:20-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:177"},{"text":"predictions.sample(withReplacement=false,fraction=0.05).select(\"creditability\", \"label\", \"rawPrediction\", \"probability\", \"prediction\").show(10)","dateUpdated":"2017-01-25T23:07:06-0800","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[{"name":"creditability","index":0,"aggr":"sum"}],"values":[{"name":"label","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"creditability","index":0,"aggr":"sum"}}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485326943467_1727885996","id":"20170124-224903_2009815765","result":{"code":"SUCCESS","type":"TEXT","msg":"+-------------+-----+--------------------+--------------------+----------+\n|creditability|label|       rawPrediction|         probability|prediction|\n+-------------+-----+--------------------+--------------------+----------+\n|          1.0|  0.0|[13.9877885856571...|[0.69938942928285...|       0.0|\n|          1.0|  0.0|[14.9024042478432...|[0.74512021239216...|       0.0|\n|          1.0|  0.0|[12.5854901866153...|[0.62927450933076...|       0.0|\n|          1.0|  0.0|[14.3739614749437...|[0.71869807374718...|       0.0|\n|          1.0|  0.0|[16.0445895564182...|[0.80222947782091...|       0.0|\n|          1.0|  0.0|[15.6892987998650...|[0.78446493999325...|       0.0|\n|          1.0|  0.0|[16.8142230261005...|[0.84071115130502...|       0.0|\n|          1.0|  0.0|[16.8107649009822...|[0.84053824504911...|       0.0|\n|          1.0|  0.0|[15.3712774137781...|[0.76856387068890...|       0.0|\n|          1.0|  0.0|[15.8535393085255...|[0.79267696542627...|       0.0|\n+-------------+-----+--------------------+--------------------+----------+\nonly showing top 10 rows\n\n"},"dateCreated":"2017-01-24T10:49:03-0800","dateStarted":"2017-01-25T23:07:19-0800","dateFinished":"2017-01-25T23:07:20-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:178","focus":true},{"text":"import org.apache.spark.mllib.evaluation.RegressionMetrics\r\nval rm: RegressionMetrics = new RegressionMetrics(\r\n      predictions.select(\"prediction\", \"label\").rdd.map(x =>\r\n        (x(0).asInstanceOf[Double], x(1).asInstanceOf[Double]))\r\n    )\r\nprintln(\"MSE: \" + rm.meanSquaredError)\r\nprintln(\"MAE: \" + rm.meanAbsoluteError)\r\nprintln(\"RMSE Squared: \" + rm.rootMeanSquaredError)\r\nprintln(\"R Squared: \" + rm.r2)\r\nprintln(\"Explained Variance: \" + rm.explainedVariance)","dateUpdated":"2017-01-25T23:07:07-0800","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485326956945_1477799211","id":"20170124-224916_1870905834","result":{"code":"SUCCESS","type":"TEXT","msg":"\nimport org.apache.spark.mllib.evaluation.RegressionMetrics\n\nrm: org.apache.spark.mllib.evaluation.RegressionMetrics = org.apache.spark.mllib.evaluation.RegressionMetrics@2911a1be\nMSE: 0.3110367892976589\nMAE: 0.3110367892976589\nRMSE Squared: 0.5577067233749822\nR Squared: -0.41166615900091386\nExplained Variance: 0.1131866533931387\n"},"dateCreated":"2017-01-24T10:49:16-0800","dateStarted":"2017-01-25T23:07:20-0800","dateFinished":"2017-01-25T23:07:22-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:179","focus":true},{"text":"import org.apache.spark.ml.param.ParamMap\r\nimport org.apache.spark.ml.{ Pipeline, PipelineStage }\r\nimport org.apache.spark.ml.tuning.{ ParamGridBuilder, CrossValidator }\r\n\r\nval paramGrid: Array[ParamMap] = new ParamGridBuilder()\r\n      .addGrid(classifier.maxBins, Array(25, 31))\r\n      .addGrid(classifier.maxDepth, Array(5, 10))\r\n      .addGrid(classifier.numTrees, Array(20, 60))\r\n      .addGrid(classifier.impurity, Array(\"entropy\", \"gini\"))\r\n      .build()\r\n\r\nval steps: Array[PipelineStage] = Array(classifier)\r\nval pipeline: Pipeline = new Pipeline().setStages(steps)\r\n\r\nval cv: CrossValidator = new CrossValidator()\r\n                            .setEstimator(pipeline)\r\n                            .setEvaluator(evaluator)\r\n                            .setEstimatorParamMaps(paramGrid)\r\n                            .setNumFolds(10)","dateUpdated":"2017-01-25T23:07:07-0800","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","tableHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485327983669_278620088","id":"20170124-230623_1296489627","result":{"code":"SUCCESS","type":"TEXT","msg":"\nimport org.apache.spark.ml.param.ParamMap\n\nimport org.apache.spark.ml.{Pipeline, PipelineStage}\n\nimport org.apache.spark.ml.tuning.{ParamGridBuilder, CrossValidator}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nparamGrid: Array[org.apache.spark.ml.param.ParamMap] =\nArray({\n\trfc_d45b10dee053-impurity: entropy,\n\trfc_d45b10dee053-maxBins: 25,\n\trfc_d45b10dee053-maxDepth: 5,\n\trfc_d45b10dee053-numTrees: 20\n}, {\n\trfc_d45b10dee053-impurity: entropy,\n\trfc_d45b10dee053-maxBins: 31,\n\trfc_d45b10dee053-maxDepth: 5,\n\trfc_d45b10dee053-numTrees: 20\n}, {\n\trfc_d45b10dee053-impurity: entropy,\n\trfc_d45b10dee053-maxBins: 25,\n\trfc_d45b10dee053-maxDepth: 5,\n\trfc_d45b10dee053-numTrees: 60\n}, {\n\trfc_d45b10dee053-impurity: entropy,\n\trfc_d45b10dee053-maxBins: 31,\n\trfc_d45b10dee053-maxDepth: 5,\n\trfc_d45b10dee053-numTrees: 60\n}, {\n\trfc_d45b10dee053-impurity: entropy,\n\trfc_d45b10dee053-maxBins: 25,\n\trfc_d45b10dee053-maxDepth: 10,\n\trfc_d45b10dee053-numTrees: 20\n}, {\n\trfc_d45b10dee053-impurity: entropy,\n\trfc_d45b10dee053-max...\nsteps: Array[org.apache.spark.ml.PipelineStage] = Array(rfc_d45b10dee053)\n\npipeline: org.apache.spark.ml.Pipeline = pipeline_cc7030a145ab\n\ncv: org.apache.spark.ml.tuning.CrossValidator = cv_97412dc66a3e\n"},"dateCreated":"2017-01-24T11:06:23-0800","dateStarted":"2017-01-25T23:07:21-0800","dateFinished":"2017-01-25T23:07:24-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:180","focus":true},{"text":"import org.apache.spark.ml.tuning.CrossValidatorModel\nval pipelineFittedModel: CrossValidatorModel = cv.fit(trainingData)","dateUpdated":"2017-01-25T23:07:07-0800","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485328581929_1101856852","id":"20170124-231621_1214009854","result":{"code":"SUCCESS","type":"TEXT","msg":"\nimport org.apache.spark.ml.tuning.CrossValidatorModel\n\npipelineFittedModel: org.apache.spark.ml.tuning.CrossValidatorModel = cv_97412dc66a3e\n"},"dateCreated":"2017-01-24T11:16:21-0800","dateStarted":"2017-01-25T23:07:22-0800","dateFinished":"2017-01-25T23:09:22-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:181","focus":true},{"text":"val cvpredictions: DataFrame = pipelineFittedModel.transform(testData)\r\nval cvaccuracy: Double = evaluator.evaluate(cvpredictions)\r\nprintln(\"Accuracy After Pipeline Fitting: \" + cvaccuracy)","dateUpdated":"2017-01-25T23:07:07-0800","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485328651715_-1987063849","id":"20170124-231731_783354241","result":{"code":"SUCCESS","type":"TEXT","msg":"\ncvpredictions: org.apache.spark.sql.DataFrame = [creditability: double, balance: double ... 24 more fields]\n\ncvaccuracy: Double = 0.8049040511727079\nAccuracy After Pipeline Fitting: 0.8049040511727079\n"},"dateCreated":"2017-01-24T11:17:31-0800","dateStarted":"2017-01-25T23:07:24-0800","dateFinished":"2017-01-25T23:09:23-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:182","focus":true},{"text":"val bestModel: RandomForestClassificationModel = pipelineFittedModel.bestModel.asInstanceOf[org.apache.spark.ml.PipelineModel].stages(0).asInstanceOf[RandomForestClassificationModel]\nprintln(pipelineFittedModel.bestModel.asInstanceOf[org.apache.spark.ml.PipelineModel].stages(0))","dateUpdated":"2017-01-25T23:07:07-0800","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485329318230_-1315691819","id":"20170124-232838_2044448873","result":{"code":"SUCCESS","type":"TEXT","msg":"\nbestModel: org.apache.spark.ml.classification.RandomForestClassificationModel = RandomForestClassificationModel (uid=rfc_09e0994d2477) with 60 trees\nRandomForestClassificationModel (uid=rfc_09e0994d2477) with 60 trees\n"},"dateCreated":"2017-01-24T11:28:38-0800","dateStarted":"2017-01-25T23:09:22-0800","dateFinished":"2017-01-25T23:09:23-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:183","focus":true},{"text":"bestModel.extractParamMap","dateUpdated":"2017-01-25T23:07:07-0800","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485329362502_-912597565","id":"20170124-232922_1908496655","result":{"code":"SUCCESS","type":"TEXT","msg":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nres243: org.apache.spark.ml.param.ParamMap =\n{\n\trfc_09e0994d2477-cacheNodeIds: false,\n\trfc_09e0994d2477-checkpointInterval: 10,\n\trfc_09e0994d2477-featureSubsetStrategy: auto,\n\trfc_09e0994d2477-featuresCol: features,\n\trfc_09e0994d2477-impurity: gini,\n\trfc_09e0994d2477-labelCol: label,\n\trfc_09e0994d2477-maxBins: 25,\n\trfc_09e0994d2477-maxDepth: 10,\n\trfc_09e0994d2477-maxMemoryInMB: 256,\n\trfc_09e0994d2477-minInfoGain: 0.0,\n\trfc_09e0994d2477-minInstancesPerNode: 1,\n\trfc_09e0994d2477-predictionCol: prediction,\n\trfc_09e0994d2477-probabilityCol: probability,\n\trfc_09e0994d2477-rawPredictionCol: rawPrediction,\n\trfc_09e0994d2477-seed: 5043,\n\trfc_09e0994d2477-subsamplingRate: 1.0\n}\n"},"dateCreated":"2017-01-24T11:29:22-0800","dateStarted":"2017-01-25T23:09:23-0800","dateFinished":"2017-01-25T23:09:24-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:184","focus":true},{"text":"val rmcv: RegressionMetrics = new RegressionMetrics(cvpredictions.select(\"prediction\", \"label\")\r\n                                                    .rdd.map(x => (x(0).asInstanceOf[Double], x(1).asInstanceOf[Double])))\r\nprintln(\"MSE: \" + rmcv.meanSquaredError)\r\nprintln(\"MAE: \" + rmcv.meanAbsoluteError)\r\nprintln(\"RMSE Squared: \" + rmcv.rootMeanSquaredError)\r\nprintln(\"R Squared: \" + rmcv.r2)\r\nprintln(\"Explained Variance: \" + rmcv.explainedVariance)","dateUpdated":"2017-01-25T23:07:07-0800","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485329694450_-1778071341","id":"20170124-233454_260633342","result":{"code":"SUCCESS","type":"TEXT","msg":"\nrmcv: org.apache.spark.mllib.evaluation.RegressionMetrics = org.apache.spark.mllib.evaluation.RegressionMetrics@bee780a\nMSE: 0.2675585284280937\nMAE: 0.26755852842809363\nRMSE Squared: 0.5172606001118717\nR Squared: -0.21433648086100132\nExplained Variance: 0.15120636234494053\n"},"dateCreated":"2017-01-24T11:34:54-0800","dateStarted":"2017-01-25T23:09:23-0800","dateFinished":"2017-01-25T23:09:25-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:185","focus":true},{"text":"bestModel.write.overwrite().save(\"/home/anindya/zeppelin-spark-projects/spark-ml-randomforest-creditrisk/model\")","dateUpdated":"2017-01-25T23:07:07-0800","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485329896536_1363542991","id":"20170124-233816_309637593","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2017-01-24T11:38:16-0800","dateStarted":"2017-01-25T23:09:24-0800","dateFinished":"2017-01-25T23:09:26-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:186"},{"text":"","dateUpdated":"2017-01-25T23:07:07-0800","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485332034499_-2134396439","id":"20170125-001354_1348983253","dateCreated":"2017-01-25T12:13:54-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:187","dateFinished":"2017-01-25T23:09:26-0800","dateStarted":"2017-01-25T23:09:25-0800","result":{"code":"SUCCESS","type":"TEXT","msg":""},"focus":true}],"name":"spark-ml-randomforest-creditrisk","id":"2C9W8TZKS","angularObjects":{"2C6PQ36R1:shared_process":[],"2C73B4S87:shared_process":[],"2C87AW83D:shared_process":[]},"config":{"looknfeel":"default"},"info":{}}